{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","_ref","setInputText","todos","inputText","setTodos","setStatus","_jsxs","children","_jsx","value","onChange","e","console","log","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","completeHandler","map","item","todoDeleteHandler","filter","el","TodoList","filterTodos","App","useState","status","setfilterTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","localTodos","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f86369bb.chunk.js","sourcesContent":["import React from 'react';\nimport \"../App.css\";\n\nconst Form = ( {setInputText, todos, inputText, setTodos, setStatus} ) =>{\n    const inputTextHandler = (e) =>{\n        console.log(e.target.value);\n        setInputText(e.target.value);\n    }\n\n    const submitTodoHandler = (e) =>{\n        e.preventDefault();\n\n        setTodos([\n            ...todos, { text:inputText, completed:false, id:Math.random()*1000}\n        ]);\n\n        setInputText(\"\"); \n    }\n\n    const statusHandler = (e) =>{\n        setStatus(e.target.value)\n    }\n\n    return(\n        <form>\n        <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\n        <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\n            <i className=\"fas fa-plus-square\"></i>\n        </button>\n        <div className=\"select\">\n            <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\n            <option value=\"all\">All</option>\n            <option value=\"completed\">Completed</option>\n            <option value=\"uncompleted\">Uncompleted</option>\n            </select>\n        </div>\n        </form>\n    );\n};\n\nexport default Form;","const Todo = ({todo,todos, setTodos}) =>{\n\n    const todoDeleteHandler= () =>{\n        setTodos(todos.filter((el) =>  el.id !== todo.id));\n    }\n\n    const completeHandler = () =>{\n        setTodos(todos.map(item => {\n            if(item.id === todo.id){\n                return{\n                    ...item, completed: !todo.completed\n                }\n            }\n            return item;\n        }))\n    }\n\n    return(\n        <div className=\"todo\">\n            <li className={`todo-item ${todo.completed ? \"completed\" : ''}`}>\n                {todo.text}\n            </li>\n            <button onClick={completeHandler} className=\"complete-btn\"><i className=\"fas fa-check\"> </i></button>\n            <button onClick={todoDeleteHandler} className=\"trash-btn\"><i className=\"fas fa-trash\"> </i></button>\n        </div>\n    );\n};\n\nexport default Todo;","import React from 'react';\nimport Todo from \"./Todo\";\n\nconst TodoList = ({todos, setTodos, filterTodos}) =>{\n    return(\n        <div className=\"todo-container\">\n            <ul className=\"todo-list\">\n                {filterTodos.map(todo => (\n                    <Todo\n                        setTodos={setTodos} \n                        todos={todos}\n                        key={todo.id} \n                        todo={todo}/>\n                ))}\n               \n            </ul>\n        </div>\n    );\n};\n\nexport default TodoList;","import './App.css';\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\nimport {useState, useEffect} from 'react';\n\nfunction App() {\n\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filterTodos, setfilterTodos] = useState([]);\n\n  //use only once\n\n  useEffect(()=>{\n    getLocalTodos();\n  },[]);\n\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [status, todos]);\n\n\n  const filterHandler = () =>{\n    switch (status) {\n      case \"completed\":\n        setfilterTodos(todos.filter(todos => todos.completed === true));\n        break;\n      case \"uncompleted\":\n        setfilterTodos(todos.filter(todos => todos.completed === false));\n        break;\n      default:\n        setfilterTodos(todos);\n        break;\n    }\n  }\n\n  //SAVE TO LOCAL\n  const saveLocalTodos=()=>{\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }\n\n  const getLocalTodos=()=>{\n    if(localStorage.getItem(\"todos\") === null){\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    }else{\n      let localTodos = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(localTodos);\n    }\n  }\n\n  \n  return (\n    <div className=\"App\">\n      \n      <header>\n        <h1>React Todo List</h1>\n      </header>\n      <div className=\"container\">\n        <Form \n          inputText={inputText}\n          setInputText={setInputText}\n          todos={todos}\n          setTodos={setTodos}\n          setStatus={setStatus} />\n\n        <TodoList setTodos={setTodos} todos={todos} filterTodos={filterTodos}/>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}